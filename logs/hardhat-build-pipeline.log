
BUILD STAGE 1 :: INSTALL THE REQUIRED TOOLS

[3J[H[2J
------------------------------------[[[[ Install-Tools-On-MacOS-Or-Linux ]]]]------------------------------------

This command will install all of the required Node.js packages. This script was created on MacOS, but can be used in any Linux Distro that has curl installed. This run started on Sun Apr 14 02:07:01 EDT 2024.

=> nvm is already installed in /Users/jgorospe/.nvm, trying to update using git
=> => Compressing and cleaning up git repository

=> nvm source string already in /Users/jgorospe/.bashrc
=> bash_completion source string already in /Users/jgorospe/.bashrc
=> Close and reopen your terminal to start using nvm or run the following to use it now:

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
Now using node v18.20.2 (npm v10.5.2)
Now using node v18.20.2 (npm v10.5.2)
[0;32mdefault[0m [0;90m->[0m [0;32m18[0m ([0;90m->[0m [0;32mv18.20.2[0m)
v18.20.2
yarn info v1.22.22
Done in 0.15s.
yarn install v1.22.22
[1/4] Resolving packages...
success Already up-to-date.
Done in 0.46s.
yarn run v1.22.22
$ /Users/jgorospe/Documents/GitHub/hardhat-fund-me-fcc/node_modules/.bin/hardhat
Hardhat version 2.8.3

Usage: hardhat [GLOBAL OPTIONS] <TASK> [TASK OPTIONS]

GLOBAL OPTIONS:

  --config           	A Hardhat config file. 
  --emoji            	Use emoji in messages. 
  --help             	Shows this message, or a task's help if its name is provided 
  --max-memory       	The maximum amount of memory that Hardhat can use. 
  --network          	The network to connect to. 
  --show-stack-traces	Show stack traces. 
  --tsconfig         	A TypeScript config file. 
  --verbose          	Enables Hardhat verbose logging 
  --version          	Shows hardhat's version. 


AVAILABLE TASKS:

  check             	Check whatever you need
  clean             	Clears the cache and deletes all artifacts
  compile           	Compiles the entire project, building all artifacts
  console           	Opens a hardhat console
  coverage          	Generates a code coverage report for tests
  deploy            	Deploy contracts
  etherscan-verify  	submit contract source code to etherscan
  export            	export contract deployment of the specified network into one file
  export-artifacts  	
  flatten           	Flattens and prints contracts and their dependencies
  gas-reporter:merge	
  help              	Prints this message
  node              	Starts a JSON-RPC server on top of Hardhat EVM
  run               	Runs a user-defined script after compiling the project
  sourcify          	submit contract source code to sourcify (https://sourcify.dev)
  test              	Runs mocha tests
  verify            	Verifies contract on Etherscan

To get help for a specific task run: npx hardhat help [task]

Done in 1.37s.


This run ended on Sun Apr 14 02:07:15 EDT 2024.


------------------------------------[[[[ Tool Runner Script ]]]]------------------------------------


This tool runner script can be used to run the following commands to deploy the Solidity examples from the Patrick Collins FCC Solidity YouTube course.

You can view just this help menu again (without triggering any automation) by running 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h' or 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h --help'.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes-Clean-Environment
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-Real-Ethereum-Testnet
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Hardhat-Test

If you're running this for the first time run the following before running Start-Deployment-On-Local-Hardhat-Node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux

Then you can run the following combined commands in your terminal to deploy the contract to the Hardhat local blockchain node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes && bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat

You can also use the provided Lesson7CodeSessions_start-automation-build-pipeline.sh to run all the above commands in a sequence similar to a build pipeline.

bash ./Lesson7CodeSessions_start-automation-build-pipeline.sh



BUILD STAGE 2 :: TEST THE DEPLOYED SMART CONTRACT(S) ON A LOCAL BLOCKCHAIN NODE

[3J[H[2J
------------------------------------[[[[ Start-Datadriven-Hardhat-Test ]]]]------------------------------------

This command will run the Start-Hardhat-Test script. This run started on Sun Apr 14 02:07:17 EDT 2024.

Compiling 5 files with 0.6.6
Compiling 4 files with 0.8.7
Solidity compilation finished successfully

  FundMe
    constructor
      âœ“ sets the aggregator addresses correctly
    fund
      âœ“ Fails if you don't send enough ETH
      âœ“ Updates the amount funded data structure
      âœ“ Adds funder to array of funders
    withdraw
      âœ“ withdraws ETH from a single funder
GasCost: 101604730023632
GasUsed: 77744
GasPrice: 1306914103
      âœ“ is allows us to withdraw with multiple funders
      âœ“ Only allows the owner to withdraw


  7 passing (953ms)

Â·--------------------------------|----------------------------|-------------|-----------------------------Â·
|      Solc version: 0.8.7       Â·  Optimizer enabled: false  Â·  Runs: 200  Â·  Block limit: 30000000 gas  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  Methods                                                                                                â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  Contract  Â·  Method           Â·  Min        Â·  Max         Â·  Avg        Â·  # calls      Â·  usd (avg)  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  FundMe    Â·  cheaperWithdraw  Â·          -  Â·           -  Â·      77744  Â·            2  Â·          -  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  FundMe    Â·  fund             Â·      87366  Â·      104466  Â·      95916  Â·           10  Â·          -  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  FundMe    Â·  withdraw         Â·          -  Â·           -  Â·      35640  Â·            2  Â·          -  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  Deployments                   Â·                                          Â·  % of limit   Â·             â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  FundMe                        Â·          -  Â·           -  Â·    1058635  Â·        3.5 %  Â·          -  â”‚
Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·|Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·
|  MockV3Aggregator              Â·          -  Â·           -  Â·     569635  Â·        1.9 %  Â·          -  â”‚
Â·--------------------------------|-------------|--------------|-------------|---------------|-------------Â·

This run ended on Sun Apr 14 02:07:26 EDT 2024.


------------------------------------[[[[ Tool Runner Script ]]]]------------------------------------


This tool runner script can be used to run the following commands to deploy the Solidity examples from the Patrick Collins FCC Solidity YouTube course.

You can view just this help menu again (without triggering any automation) by running 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h' or 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h --help'.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes-Clean-Environment
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-Real-Ethereum-Testnet
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Hardhat-Test

If you're running this for the first time run the following before running Start-Deployment-On-Local-Hardhat-Node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux

Then you can run the following combined commands in your terminal to deploy the contract to the Hardhat local blockchain node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes && bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat

You can also use the provided Lesson7CodeSessions_start-automation-build-pipeline.sh to run all the above commands in a sequence similar to a build pipeline.

bash ./Lesson7CodeSessions_start-automation-build-pipeline.sh





ALL TESTS PASSED. DEPLOYMENT TO THE ETHEREUM TESTNET WILL CONTINUE.


BUILD STAGE 3 :: DEPLOY THE SMART CONTRACT(S) TO ETHEREUM TESTNET

[3J[H[2J
------------------------------------[[[[ Start-Deployment-On-Real-Ethereum-Testnet ]]]]------------------------------------

This command will run the Start-Deployment-On-Real-Ethereum-Testnet script. This run started on Sun Apr 14 02:07:28 EDT 2024.



-------->>>> Deployment Results Log :: Start-Deployment-On-Real-Ethereum-Testnet :: Sepolia <<<<--------
Nothing to compile
----------------------------------------------------
Deploying FundMe and waiting for confirmations...
reusing "FundMe" at 0x7B02d0D59Feb4f8F4975DB3F3da91d65E89FdC0d
FundMe deployed at 0x7B02d0D59Feb4f8F4975DB3F3da91d65E89FdC0d
----------------------------------------------------
Deploying FunWithStorage and waiting for confirmations...
reusing "FunWithStorage" at 0xa94f822C3E3Fd90E914fd5d848a73dd444425d67
Logging storage...
Location 0: 0x0000000000000000000000000000000000000000000000000000000000000019
Location 1: 0x0000000000000000000000000000000000000000000000000000000000000001
Location 2: 0x0000000000000000000000000000000000000000000000000000000000000001
Location 3: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 4: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 5: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 6: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 7: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 8: 0x0000000000000000000000000000000000000000000000000000000000000000
Location 9: 0x0000000000000000000000000000000000000000000000000000000000000000


This run ended on Sun Apr 14 02:07:38 EDT 2024.


------------------------------------[[[[ Tool Runner Script ]]]]------------------------------------


This tool runner script can be used to run the following commands to deploy the Solidity examples from the Patrick Collins FCC Solidity YouTube course.

You can view just this help menu again (without triggering any automation) by running 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h' or 'bash ./Lesson7CodeSessions_start-deployment-scripts.sh -h --help'.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes-Clean-Environment
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-Real-Ethereum-Testnet
bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Hardhat-Test

If you're running this for the first time run the following before running Start-Deployment-On-Local-Hardhat-Node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Install-Tools-On-MacOS-Or-Linux

Then you can run the following combined commands in your terminal to deploy the contract to the Hardhat local blockchain node.

bash ./Lesson7CodeSessions_start-deployment-scripts.sh Stop-Local-Blockchain-Nodes && bash ./Lesson7CodeSessions_start-deployment-scripts.sh Start-Deployment-On-A-Specific-Network hardhat

You can also use the provided Lesson7CodeSessions_start-automation-build-pipeline.sh to run all the above commands in a sequence similar to a build pipeline.

bash ./Lesson7CodeSessions_start-automation-build-pipeline.sh



This automation build pipeline run ended on Sun Apr 14 02:06:58 EDT 2024.

